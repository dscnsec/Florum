{"version":3,"sources":["webpack://@fof/links/webpack/bootstrap","webpack://@fof/links/external \"flarum.core.compat['app']\"","webpack://@fof/links/external \"flarum.core.compat['Model']\"","webpack://@fof/links/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/links/external \"flarum.core.compat['extend']\"","webpack://@fof/links/./src/common/models/Link.js","webpack://@fof/links/external \"flarum.core.compat['utils/mixin']\"","webpack://@fof/links/./src/common/utils/sortLinks.js","webpack://@fof/links/external \"flarum.core.compat['components/Button']\"","webpack://@fof/links/external \"flarum.core.compat['components/AdminNav']\"","webpack://@fof/links/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@fof/links/external \"flarum.core.compat['components/Page']\"","webpack://@fof/links/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/links/./node_modules/html5sortable/dist/html5sortable.es.js","webpack://@fof/links/./src/admin/components/EditLinkModal.js","webpack://@fof/links/./src/admin/components/LinksPage.js","webpack://@fof/links/./src/admin/index.js","webpack://@fof/links/./src/admin/addLinksPane.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","__webpack_exports__","Link","mixin","Model","title","attribute","type","url","position","isInternal","isNewtab","sortLinks","links","slice","sort","a","b","aPos","bPos","addData","element","undefined","h5s","data","_filter","nodes","selector","NodeList","HTMLCollection","Array","Error","from","filter","item","nodeType","matches","stores","Map","Store","this","_config","_placeholder","_data","config","forEach","set","mergedConfig","assign","entries","configurable","setConfig","has","getConfig","placeholder","HTMLElement","setData","getData","deleteData","delete","store","sortableElement","addEventListener","eventName","callback","length","removeEventListener","addAttribute","setAttribute","removeAttribute","_offset","parentElement","getClientRects","rect","left","window","pageXOffset","right","top","pageYOffset","bottom","_debounce","func","wait","timeout","args","_i","arguments","clearTimeout","setTimeout","apply","_index","elementList","indexOf","isInDom","parentNode","insertNode","referenceNode","newElement","insertBefore","nextElementSibling","target","insertAfter","_serialize","sortableContainer","customItemSerializer","customContainerSerializer","serializedItem","serializedContainer","isSortable","items","children","serializedItems","map","parent","node","html","outerHTML","index","container","itemCount","_makePlaceholder","placeholderClass","_a","includes","tagName","document","createElement","innerHTML","classList","add","split","_getElementHeight","style","getComputedStyle","int","parseInt","getPropertyValue","isNaN","reduce","sum","_getHandles","querySelector","shadowRoot","getEventTarget","event","composedPath","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","setDragImage","customDragImage","Event","dataTransfer","dragImage","effectAllowed","id","_listsConnected","destination","origin","acceptFrom","sel","defaultConfiguration","connectWith","disableIEFix","copy","draggingClass","hoverClass","debounce","throttleTime","maxItems","itemSerializer","containerSerializer","dragging","draggingHeight","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","enableHoverClass","enable","hoverClasses_1","fn","threshold","_this","lastEventTimestamp","now","Date","_throttle","buttons","_b","remove","_removeItemEvents","_getDragging","draggedItem","sortable","ditem","cloneNode","appendChild","display","oldDisplay","_removeSortableData","_removeItemData","findSortable","find","el","findDragElement","options","itemlist","ele","contains","_enableSortable","opts","handles","handle","dragDrop","_reloadSortable","sortableElements","method","String","querySelectorAll","test","configKey","console","warn","customPlaceholder","listItems","tempContainer","e","stopImmediatePropagation","getAttribute","dragItem","dispatchEvent","CustomEvent","detail","elementIndex","originalTarget","itemsBeforeUpdate","visiblePlaceholder","values","preventDefault","stopPropagation","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","debouncedDragOverEnter","forcePlaceholderSize","height","thisHeight","placeholderIndex","thisIndex","deadZone","offsetTop","placeAfter","offsetHeight","placeholders","onDragOverEnter","dropEffect","concat","destroy","_destroySortable","disable","_disableSortable","__testing","html5sortable_es","EditlinksModal","init","_Modal","link","props","app","createRecord","itemTitle","prop","className","translator","trans","content","oninput","checked","onchange","Button","component","loading","exists","onclick","onsubmit","_this2","save","then","hide","response","handleErrors","confirm","redraw","Modal","LinkItem","data-id","icon","modal","show","EditLinkModal","LinksPage","view","all","$","order","getById","pushData","attributes","request","forum","strategy","Page","initializers","models","routes","path","extensionSettings","route","extend","AdminNav","AdminLinkButton","href","description"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['extend'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Link extends mixin(Model, {\n    title: Model.attribute('title'),\n    type: Model.attribute('type'),\n    url: Model.attribute('url'),\n    position: Model.attribute('position'),\n    isInternal: Model.attribute('isInternal'),\n    isNewtab: Model.attribute('isNewtab'),\n}) {}\n","module.exports = flarum.core.compat['utils/mixin'];","export default function sortLinks(links) {\n    return links.slice(0).sort((a, b) => {\n        const aPos = a.position();\n        const bPos = b.position();\n        return aPos > bPos ? 1 : aPos < bPos ? -1 : 0;\n    });\n}\n","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/Modal'];","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error(\"The key must be a string.\");\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error(\"The key must be a string.\");\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error(\"The key must be a string.\");\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (options.hasOwnProperty(configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight) {\n                    // Dead zone?\n                    var deadZone = thisHeight - draggingHeight;\n                    var offsetTop = _offset(element).top;\n                    if (placeholderIndex < thisIndex && pageY < offsetTop) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        pageY > offsetTop + thisHeight - deadZone) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddle = _offset(element).top + element.offsetHeight / 2;\n                    placeAfter = pageY >= elementMiddle;\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData\n};\n\nexport default sortable;\n","/* global m*/\n/* global confirm*/\n\nimport app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\n\n/**\n * The `EditlinksModal` component shows a modal dialog which allows the user\n * to create or edit a link.\n */\nexport default class EditlinksModal extends Modal {\n    init() {\n        super.init();\n\n        this.link = this.props.link || app.store.createRecord('links');\n\n        this.itemTitle = m.prop(this.link.title() || '');\n        this.url = m.prop(this.link.url() || '');\n        this.isInternal = m.prop(this.link.isInternal() && true);\n        this.isNewtab = m.prop(this.link.isNewtab() && true);\n    }\n\n    className() {\n        return 'EditLinkModal Modal--small';\n    }\n\n    title() {\n        const title = this.itemTitle();\n        return title || app.translator.trans('fof-links.admin.edit_link.title');\n    }\n\n    content() {\n        return (\n            <div className=\"Modal-body\">\n                <div className=\"Form\">\n                    <div className=\"Form-group\">\n                        <label>{app.translator.trans('fof-links.admin.edit_link.title_label')}</label>\n                        <input\n                            className=\"FormControl\"\n                            placeholder={app.translator.trans('fof-links.admin.edit_link.title_placeholder')}\n                            value={this.itemTitle()}\n                            oninput={e => {\n                                this.itemTitle(e.target.value);\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"Form-group\">\n                        <label>{app.translator.trans('fof-links.admin.edit_link.url_label')}</label>\n                        <input\n                            className=\"FormControl\"\n                            placeholder={app.translator.trans('fof-links.admin.edit_link.url_placeholder')}\n                            type=\"url\"\n                            value={this.url()}\n                            oninput={e => {\n                                this.url(e.target.value);\n                            }}\n                        />\n                    </div>\n\n                    <div className=\"Form-group\">\n                        <div>\n                            <label className=\"checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    value=\"1\"\n                                    checked={this.isInternal()}\n                                    onchange={e => {\n                                        if (this.isInternal(e.target.checked)) {\n                                            this.isNewtab(false);\n                                        }\n                                    }}\n                                />\n                                {app.translator.trans('fof-links.admin.edit_link.internal_link')}\n                            </label>\n                            <label className=\"checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    value=\"1\"\n                                    checked={this.isNewtab()}\n                                    onchange={e => {\n                                        if (this.isNewtab(e.target.checked)) {\n                                            this.isInternal(false);\n                                        }\n                                    }}\n                                />\n                                {app.translator.trans('fof-links.admin.edit_link.open_newtab')}\n                            </label>\n                        </div>\n                    </div>\n\n                    <div className=\"Form-group\">\n                        {Button.component({\n                            type: 'submit',\n                            className: 'Button Button--primary EditLinkModal-save',\n                            loading: this.loading,\n                            children: app.translator.trans('fof-links.admin.edit_link.submit_button'),\n                        })}\n                        {this.link.exists ? (\n                            <button type=\"button\" className=\"Button EditLinkModal-delete\" onclick={() => this.delete()}>\n                                {app.translator.trans('fof-links.admin.edit_link.delete_link_button')}\n                            </button>\n                        ) : (\n                            ''\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        this.link\n            .save({\n                title: this.itemTitle(),\n                url: this.url(),\n                isInternal: this.isInternal(),\n                isNewtab: this.isNewtab(),\n            })\n            .then(\n                () => this.hide(),\n                response => {\n                    this.loading = false;\n                    this.handleErrors(response);\n                }\n            );\n    }\n\n    delete() {\n        if (confirm(app.translator.trans('fof-links.admin.edit_link.delete_link_confirmation'))) {\n            this.link.delete().then(() => m.redraw());\n            this.hide();\n        }\n    }\n}\n","import Page from 'flarum/components/Page';\nimport Button from 'flarum/components/Button';\n\nimport sortable from 'html5sortable/dist/html5sortable.es.js';\n\nimport EditLinkModal from './EditLinkModal';\nimport sortLinks from '../../common/utils/sortLinks';\n\nfunction LinkItem(link) {\n    return (\n        <li data-id={link.id()}>\n            <div className=\"LinkListItem-info\">\n                <span className=\"LinkListItem-name\">{link.title()}</span>\n                {Button.component({\n                    className: 'Button Button--link',\n                    icon: 'fas fa-pencil-alt',\n                    onclick: () => app.modal.show(new EditLinkModal({ link })),\n                })}\n            </div>\n        </li>\n    );\n}\n\nexport default class LinksPage extends Page {\n    view() {\n        return (\n            <div className=\"LinksPage\">\n                <div className=\"LinksPage-header\">\n                    <div className=\"container\">\n                        <p>{app.translator.trans('fof-links.admin.links.about_text')}</p>\n                        {Button.component({\n                            className: 'Button Button--primary',\n                            icon: 'fas fa-plus',\n                            children: app.translator.trans('fof-links.admin.links.create_button'),\n                            onclick: () => app.modal.show(new EditLinkModal()),\n                        })}\n                    </div>\n                </div>\n                <div className=\"LinksPage-list\">\n                    <div className=\"container\">\n                        <div className=\"LinkItems\">\n                            <label>{app.translator.trans('fof-links.admin.links.links')}</label>\n                            <ol className=\"LinkList\">{sortLinks(app.store.all('links')).map(LinkItem)}</ol>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    config() {\n        sortable(this.$('ol')).forEach(el =>\n            el.addEventListener('sortupdate', () => {\n                const order = this.$('.LinkList > li')\n                    .map((i, el) => ({\n                        id: $(el).data('id'),\n                    }))\n                    .get();\n\n                order.forEach((link, i) => {\n                    const item = app.store.getById('links', link.id);\n                    item.pushData({\n                        attributes: {\n                            position: i,\n                        },\n                    });\n                });\n\n                app.request({\n                    url: `${app.forum.attribute('apiUrl')}/links/order`,\n                    method: 'POST',\n                    data: { order },\n                });\n\n                m.redraw.strategy('all');\n                m.redraw();\n            })\n        );\n    }\n}\n","import app from 'flarum/app';\n\nimport Link from '../common/models/Link';\nimport addLinksPane from './addLinksPane';\n\napp.initializers.add('fof-links', () => {\n    app.store.models.links = Link;\n    addLinksPane();\n});\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\n\nimport LinksPage from './components/LinksPage';\n\nexport default function() {\n    app.routes.links = { path: '/links', component: LinksPage.component() };\n\n    app.extensionSettings['fof-links'] = () => m.route(app.route('links'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add(\n            'links',\n            AdminLinkButton.component({\n                href: app.route('links'),\n                icon: 'fas fa-bars',\n                children: app.translator.trans('fof-links.admin.nav.links_button'),\n                description: app.translator.trans('fof-links.admin.nav.links_text'),\n            })\n        );\n    });\n}\n"],"sourceRoot":""}