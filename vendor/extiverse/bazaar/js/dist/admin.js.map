{"version":3,"sources":["webpack://@flagrow/bazaar/webpack/bootstrap","webpack://@flagrow/bazaar/external \"flarum.core.compat['app']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['Model']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['Component']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Badge']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Modal']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/computed']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/LinkButton']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['extend']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/mixin']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/SettingsModal']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Switch']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/fullTime']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/extract']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/AdminNav']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Dropdown']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['components/Placeholder']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/extractText']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@flagrow/bazaar/external \"flarum.core.compat['helpers/humanTime']\"","webpack://@flagrow/bazaar/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/bazaar/./src/admin/models/Extension.js","webpack://@flagrow/bazaar/./src/admin/models/Task.js","webpack://@flagrow/bazaar/./src/admin/utils/ExtensionRepository.js","webpack://@flagrow/bazaar/./src/admin/utils/popupPromise.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionListItem.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarLoader.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionList.js","webpack://@flagrow/bazaar/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@flagrow/bazaar/./src/admin/components/CustomCheckbox.js","webpack://@flagrow/bazaar/./src/admin/components/ExtensionSearch.js","webpack://@flagrow/bazaar/./src/admin/utils/debounce.js","webpack://@flagrow/bazaar/./src/admin/modals/FilePermissionsModal.js","webpack://@flagrow/bazaar/./src/admin/modals/MemoryLimitModal.js","webpack://@flagrow/bazaar/./src/admin/modals/BazaarConnectModal.js","webpack://@flagrow/bazaar/./src/admin/modals/BazaarSettingsModal.js","webpack://@flagrow/bazaar/./src/admin/modals/DashboardModal.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarPageHeader.js","webpack://@flagrow/bazaar/./src/admin/components/BazaarPage.js","webpack://@flagrow/bazaar/./src/admin/utils/TaskRepository.js","webpack://@flagrow/bazaar/./src/admin/components/TaskListItem.js","webpack://@flagrow/bazaar/./src/admin/components/TasksPage.js","webpack://@flagrow/bazaar/./src/admin/index.js","webpack://@flagrow/bazaar/./src/admin/addBazaarPage.js","webpack://@flagrow/bazaar/./src/admin/addTasksPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Extension_Extension","mixin_default","external_flarum_core_compat_Model_default","a","package","attribute","title","description","license","icon","locale","discuss_link","landing_link","downloads","installed","enabled","pending","installed_version","highest_version","outdated","flarum_id","premium","subscribed","can_install","computed_default","flarumCompatibilityCurrent","can_uninstall","can_enable","can_disable","canCheckout","canUnsubscribe","canSafelyUnsubscribe","favorites","favorited","flarumCompatibilityLatest","flarumCompatibilityNext","Task_Task","status","command","output","created_at","started_at","finished_at","ExtensionRepository_ExtensionRepository","ExtensionRepository","loading","this","extensions","prop","requestError","redraw","installExtension","extension","_this","external_flarum_core_compat_app_default","request","method","url","forum","timeout","data","id","then","response","updateExtensionInRepository","catch","installFailure","resetNavigation","loadNextPage","uninstallExtension","_this2","uninstallFailure","favoriteExtension","_this3","favorite","premiumExtensionSubscribe","buy","settings","waitForUrl","width","height","$window","$","window","deferred","popup","open","interval","setInterval","closed","clearInterval","reject","document","URL","close","resolve","e","promise","popupPromise","location","reload","alert","translator","trans","premiumExtensionUnsubscribe","updateExtension","_this4","toggleExtension","_this5","disableExtension","enableExtension","getExtensionIndex","findIndex","ext","store","pushObject","ExtensionListItem_ExtensionListItem","config","isInitialized","props","tooltip","container","view","connected","controls","controlItems","toArray","badges","repository","className","length","data-id","style","icon_default","app","split","class","Button_default","onclick","Dropdown_default","buttonClassName","menuClassName","items","ItemList_default","favoriteTrans","add","component","children","extensionSettings","disabled","Badge_default","type","label","new","external_flarum_core_compat_Component_default","BazaarLoader_BazaarLoader","error","hidden","LinkButton_default","href","target","ExtensionList_ExtensionList","init","moreResults","resultMeta","refresh","current","pages_current","total","pages_total","loadMore","text","authorized","Placeholder_default","map","update","params","clear","loadResults","results","parseResults","offset","requestParams","page","include","join","find","push","apply","payload","links","next","meta","lazyRedraw","out","filter","sort","sortMap","q","param","relevance","_extends","assign","arguments","source","CustomCheckbox_CustomCheckbox","attrs","state","extractText_default","extract_default","onchange","getButtonContent","ExtensionSearch_ExtensionSearch","updateDebounce","func","wait","immediate","context","args","callNow","clearTimeout","setTimeout","debounce","onsubmit","oninput","withAttr","term","search","placeholder","isToggled","checked","toggleFilter","is","indexOf","splice","FilePermissionsModal_FilePermissionsModal","content","paths","file_permissions","forEach","path","Modal_default","MemoryLimitModal_MemoryLimitModal","memory_requested","memory_limit","required","limit","BazaarConnectModal_BazaarConnectModal","flagrowHost","host","connect","redirect","BazaarSettingsModal_BazaarSettingsModal","form","for","Switch_default","setting","bidi","SettingsModal_default","DashboardModal_DashboardModal","syncing","updateSetting","submitButton","_saveSettings","saveSettings_default","BazaarPageHeader_BazaarPageHeader","header","buttons","concat","pagesButtons","settingsButton","requirementsButtons","connectedButtons","modal","show","memory_limit_met","components","routeName","route","active","BazaarPage_BazaarPage","extensionList","updateResults","render","stickyParams","TaskRepository_ExtensionRepository","tasks","nextPageUrl","result","newTasks","createRecord","TaskListItem_TaskListItem","extended","task","iconName","humanTime_default","colspan","fullTime_default","TasksPage_TasksPage","loader","taskGroups","group","currentGroup","today","Date","setHours","taskDate","initializers","models","routes","external_flarum_core_compat_extend_","AdminNav_default","AdminLinkButton_default"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/computed'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/SettingsModal'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['helpers/fullTime'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/Placeholder'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['helpers/humanTime'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport computed from 'flarum/utils/computed';\n\nexport default class Extension extends mixin(Model, {\n    package: Model.attribute('package'),\n    title: Model.attribute('title'),\n    description: Model.attribute('description'),\n    license: Model.attribute('license'),\n    icon: Model.attribute('icon'),\n    locale: Model.attribute('locale'),\n\n    discuss_link: Model.attribute('discuss_link'),\n    landing_link: Model.attribute('landing_link'),\n\n    downloads: Model.attribute('downloads'),\n\n    installed: Model.attribute('installed'),\n    enabled: Model.attribute('enabled'),\n    pending: Model.attribute('pending'),\n    installed_version: Model.attribute('installed_version'),\n    highest_version: Model.attribute('highest_version'),\n    outdated: Model.attribute('outdated'),\n\n    flarum_id: Model.attribute('flarum_id'),\n\n    premium: Model.attribute('premium'),\n    subscribed: Model.attribute('subscribed'),\n\n    // Install/uninstall\n    // Extension is available if it's either non-premium or premium & subscribed\n    can_install: computed('installed', 'premium', 'subscribed', 'flarumCompatibilityCurrent', (installed, premium, subscribed, flarumCompatibilityCurrent) => !installed && flarumCompatibilityCurrent && (!premium || subscribed)),\n    can_uninstall: computed('installed', 'enabled', (installed, enabled) => installed && !enabled),\n\n    // Enable/disable\n    can_enable: computed('installed', 'enabled', (installed, enabled) => installed && !enabled),\n    can_disable: computed('installed', 'enabled', (installed, enabled) => installed && enabled),\n\n    canCheckout: Model.attribute('canCheckout'),\n    canUnsubscribe: Model.attribute('canUnsubscribe'),\n    canSafelyUnsubscribe: computed('canUnsubscribe', 'installed', (canUnsubscribe, installed) => canUnsubscribe && !installed),\n\n    favorites: Model.attribute('favorites'),\n    favorited: Model.attribute('favorited'),\n\n    flarumCompatibilityLatest: Model.attribute('flarumCompatibilityLatest'),\n    flarumCompatibilityNext: Model.attribute('flarumCompatibilityNext'),\n    flarumCompatibilityCurrent: Model.attribute('flarumCompatibilityCurrent'),\n}) {}\n","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Task extends mixin(Model, {\n    status: Model.attribute('status'),\n    command: Model.attribute('command'),\n    package: Model.attribute('package'),\n    output: Model.attribute('output'),\n    created_at: Model.attribute('created_at'),\n    started_at: Model.attribute('started_at'),\n    finished_at: Model.attribute('finished_at')\n}) {}\n","import app from \"flarum/app\";\nimport popupPromise from './popupPromise';\n\nexport default class ExtensionRepository {\n    constructor(loading) {\n        this.extensions = m.prop([]);\n        this.loading = loading;\n    }\n\n    /**\n     * Handles a request error\n     */\n    requestError() {\n        // If an error occured, we can clear the loading overlay\n        // The error means it's not processing anymore\n        this.loading('error');\n\n        // Depending on how fast the \"Oops! Something went wrong\" popup appears,\n        // the loading change is not taken into account. Use redraw to force remove the overlay\n        m.redraw();\n    }\n\n    /**\n     * Install an extension.\n     * @param extension\n     */\n    installExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions',\n            timeout: 0,\n            data: {\n                id: extension.id()\n            }\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Handles an installation failure.\n     * @param extension\n     */\n    installFailure(extension) {\n        this.resetNavigation();\n        this.loadNextPage();\n    }\n\n    /**\n     * Uninstall an extension.\n     * @param extension\n     */\n    uninstallExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'DELETE',\n            timeout: 0,\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id()\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Handles an uninstall failure.\n     * @param extension\n     */\n    uninstallFailure(extension) {\n        this.resetNavigation();\n        this.loadNextPage();\n    }\n\n    /**\n     * Processing (de-) favoriting extensions.\n     * @param extension\n     */\n    favoriteExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            method: 'post',\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id() + '/favorite',\n            data: {\n                favorite: extension.favorited() != true\n            }\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    premiumExtensionSubscribe(extension, buy = true) {\n        //this.loading(true);\n\n        const popup = popupPromise({\n            url: app.forum.attribute('apiUrl') + '/bazaar/redirect/' + (buy ? '' : 'un') + 'subscribe/' + extension.id(),\n            waitForUrl: app.forum.attribute('apiUrl') + '/bazaar/callback/subscription',\n        });\n\n        popup.then(() => {\n            window.location.reload();\n        }).catch(() => {\n            alert(app.translator.trans('bazaar.admin.page.extension.subscribe_check_failed'));\n        });\n    }\n\n    premiumExtensionUnsubscribe(extension) {\n        this.premiumExtensionSubscribe(extension, false);\n    }\n\n    /**\n     * Updates an extension.\n     * @param extension\n     */\n    updateExtension(extension) {\n        this.loading(true);\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id(),\n            timeout: 0,\n            method: 'PATCH'\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Toggles an extension (enable or disable).\n     * @param extension\n     */\n    toggleExtension(extension) {\n        this.loading(true);\n\n        const enabled = extension.enabled();\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/bazaar-extensions/' + extension.id() + '/toggle',\n            method: 'PATCH',\n            data: {enabled: !enabled}\n        }).then(response => {\n            return this.updateExtensionInRepository(response)\n        }).catch(() => this.requestError());\n    }\n\n    /**\n     * Disable an extension.\n     * @param extension\n     */\n    disableExtension(extension) {\n        return this.toggleExtension(extension);\n    }\n\n    /**\n     * Enable an extension.\n     * @param extension\n     */\n    enableExtension(extension) {\n        return this.toggleExtension(extension);\n    }\n\n    /**\n     * Loads the index of this extension in the extensions array.\n     * @param extension\n     * @returns {number}\n     */\n    getExtensionIndex(extension) {\n        return this.extensions().findIndex(ext => ext.id() == extension.id());\n    }\n\n    /**\n     * Updates an extension and takes care of updating its state in the extension page too.\n     * @param extension\n     * @param property\n     * @param value\n     */\n    updateExtensionInRepository(response) {\n        this.loading(false);\n\n        let extension = app.store.pushObject(response.data);\n        this.extensions()[this.getExtensionIndex(extension)] = extension;\n\n        m.redraw();\n\n        return extension;\n    }\n}\n","export default function(settings = {})\n{\n    const url = settings.url || '/';\n    const waitForUrl = settings.waitForUrl || null;\n    const width = settings.width || 600;\n    const height = settings.height || 400;\n    const $window = $(window);\n\n    // The new Promise polyfill of Mithril v1 is a lot better\n    const deferred = m.deferred();\n\n    const popup = window.open(url, 'bazaarPopup',\n        `width=${width},` +\n        `height=${height},` +\n        `top=${$window.height() / 2 - height / 2},` +\n        `left=${$window.width() / 2 - width / 2},` +\n        'status=no,scrollbars=no,resizable=no');\n\n    const interval = window.setInterval(() => {\n        try {\n            if (popup.closed) {\n                window.clearInterval(interval);\n                deferred.reject();\n            } else if (popup.document.URL === waitForUrl) {\n                window.clearInterval(interval);\n                popup.close();\n                deferred.resolve();\n            }\n        } catch (e) {\n            // Ignore errors, these will be cross-origin exceptions\n        }\n    }, 500);\n\n    return deferred.promise;\n}\n","import Component from \"flarum/Component\";\nimport icon from \"flarum/helpers/icon\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport Button from \"flarum/components/Button\";\nimport Dropdown from \"flarum/components/Dropdown\";\nimport Badge from 'flarum/components/Badge';\n\nexport default class ExtensionListItem extends Component {\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        // Be careful to always use a `key` with this component or this mis-align the tooltips if items are added or removed\n        if (this.props.extension.description()) this.$('.ExtensionIcon').tooltip({container: 'body'});\n    }\n\n    view() {\n        const extension = this.props.extension;\n        const connected = this.props.connected || false;\n        const controls = this.controlItems(extension, connected).toArray();\n        const badges = this.badges(extension).toArray();\n        const repository = this.props.repository;\n\n        return <div className={\n            'Extension ' +\n            (extension.enabled() ? 'enabled ' : 'disabled ') +\n            (extension.installed() ? 'installed ' : 'uninstalled ') +\n            (extension.outdated() ? 'outdated ' : '') +\n            (extension.pending() ? 'pending ' : '') +\n            (controls.length > 0 ? 'hasControls' : '') +\n            (extension.favorited() ? 'favorited' : '') +\n            (extension.flarumCompatibilityCurrent() ? ' compatible' : 'incompatible')\n        } key={extension.id()} data-id={extension.id()}>\n            <span className=\"Extension-icon\" style={extension.icon() || ''} title={extension.description()}>\n              {extension.icon() ? icon('fas fa-' + extension.icon().name) : ''}\n            </span>\n            <div className=\"Extension-meta\">\n                <ul className=\"ExtensionListItem-badges badges\">\n                    {badges}\n                </ul>\n                <label className=\"Meta-Title\">\n                    {extension.title() || extension.package()}\n                </label>\n\n                <div className=\"Meta-Item description\">\n                    {extension.description()}\n                </div>\n\n                <div className=\"Meta-Item vendor\">\n                    <div className=\"label\"><i className=\"fas fa-user\"></i> {app.translator.trans('bazaar.admin.page.extension.vendor')}</div>\n                    <div className=\"value\">{extension.package().split('/')[0]}</div>\n                </div>\n                <div className=\"Meta-Item downloads\">\n                    <div className=\"label\"><i class=\"fas fa-download\"></i> {app.translator.trans('bazaar.admin.page.extension.downloads')}</div>\n                    <div className=\"value\">{extension.downloads()}</div>\n                </div>\n                <div className=\"Meta-Item favorites\">\n                    <div className=\"label\"><i className=\"fas fa-heart\"></i> {app.translator.trans('bazaar.admin.page.extension.favorites')}</div>\n                    <div className=\"value\">{extension.favorites()}</div>\n                </div>\n                {extension.installed_version() ? (\n                    <div className=\"Meta-Item version\">\n                        <div className=\"label\">{app.translator.trans('bazaar.admin.page.extension.installed_version')}</div>\n                        <div className=\"value\">{extension.installed_version()}</div>\n                    </div>\n                ) : ''}\n                <div className=\"Meta-Item version\">\n                    <div className=\"label\">{app.translator.trans('bazaar.admin.page.extension.highest_version')}</div>\n                    <div className=\"value\">{extension.highest_version()}</div>\n                </div>\n                <div className=\"Extension-controls\">\n                    {connected ? (\n                        <Button\n                            className=\"Button Button--icon Button--flat favorite\"\n                            icon={(extension.favorited() ? 'fas' : 'far') + ' fa-heart'}\n                            onclick={() => repository.favoriteExtension(extension)}>\n                        </Button>\n                    ) : ''}\n                    {extension.discuss_link() ? (\n                        <Button\n                            className=\"Button Button--icon Button--flat\"\n                            icon=\"fas fa-comments\"\n                            onclick={() => window.open(extension.discuss_link())}>\n                        </Button>\n                    ) : ''}\n                    {extension.landing_link() ? (\n                        <Button\n                            className=\"Button Button--icon Button--flat\"\n                            icon=\"fas fa-chart-line\"\n                            onclick={() => window.open(extension.landing_link())}>\n                        </Button>\n                    ) : ''}\n                    {controls.length > 0 ? (\n                        <Dropdown\n                            buttonClassName=\"Button Button--icon Button--flat\"\n                            menuClassName=\"Dropdown-menu--right\"\n                            icon=\"fas fa-ellipsis-h\">\n                            {controls}\n                        </Dropdown>\n                    ) : ''}\n                </div>\n            </div>\n        </div>;\n    }\n\n    controlItems(extension, connected) {\n        const items = new ItemList();\n        const repository = this.props.repository;\n\n        const favoriteTrans = extension.favorited() ? 'bazaar.admin.page.button.remove_favorite_button' : 'bazaar.admin.page.button.favorite_button';\n\n        if (connected) {\n            items.add('favorite', Button.component({\n                icon: 'fas fa-heart',\n                children: app.translator.trans(favoriteTrans),\n                onclick: () => {\n                    repository.favoriteExtension(extension);\n                }\n            }));\n        }\n\n        if (! extension.pending()) {\n            if (extension.enabled() && app.extensionSettings[name]) {\n                items.add('settings', Button.component({\n                    icon: 'fas fa-cog',\n                    children: app.translator.trans('core.admin.extensions.settings_button'),\n                    onclick: app.extensionSettings[name]\n                }));\n            }\n\n            if (extension.can_uninstall()) {\n                items.add('uninstall', Button.component({\n                    icon: 'fas fa-minus-square',\n                    children: app.translator.trans('bazaar.admin.page.button.uninstall'),\n                    onclick: () => {\n                        this.props.extension = repository.uninstallExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_enable()) {\n                items.add('enable', Button.component({\n                    icon: 'fas fa-check-square',\n                    children: app.translator.trans('bazaar.admin.page.button.enable'),\n                    onclick: () => {\n                        repository.enableExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.installed() && extension.outdated()) {\n                items.add('update', Button.component({\n                    icon: 'fas fa-level-up',\n                    children: app.translator.trans('bazaar.admin.page.button.update'),\n                    onclick: () => {\n                        this.props.extension = repository.updateExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_disable()) {\n                items.add('disable', Button.component({\n                    icon: 'fas fa-square',\n                    children: app.translator.trans('bazaar.admin.page.button.disable'),\n                    onclick: () => {\n                        this.props.extension = repository.disableExtension(extension);\n                    }\n                }));\n            }\n\n            if (extension.can_install()) {\n                items.add('install', Button.component({\n                    icon: 'fas fa-plus-square',\n                    children: app.translator.trans('bazaar.admin.page.button.install'),\n                    onclick: () => {\n                        this.props.extension = repository.installExtension(extension);\n                    }\n                }));\n            }\n        }\n\n        if (extension.premium() && !connected) {\n            items.add('subscribe', Button.component({\n                disabled: true,\n                icon: 'fas fa-shopping-cart',\n                children: app.translator.trans('bazaar.admin.page.button.connect_to_subscribe'),\n            }));\n        }\n\n        if (extension.canCheckout() && connected) {\n            items.add('subscribe', Button.component({\n                icon: 'fas fa-shopping-cart',\n                children: app.translator.trans('bazaar.admin.page.button.subscribe'),\n                onclick: () => {\n                    repository.premiumExtensionSubscribe(extension);\n                }\n            }));\n        }\n\n        if (extension.canSafelyUnsubscribe() && connected) {\n            items.add('unsubscribe', Button.component({\n                icon: 'fas fa-ban',\n                children: app.translator.trans('bazaar.admin.page.button.unsubscribe'),\n                onclick: () => {\n                    repository.premiumExtensionUnsubscribe(extension);\n                }\n            }));\n        }\n\n        return items;\n    }\n\n    /**\n     * Get the Badge components that apply to this discussion.\n     *\n     * @return {ItemList}\n     * @public\n     */\n    badges(extension) {\n        const items = new ItemList();\n\n        if (!extension.flarumCompatibilityNext()) {\n            items.add('nextIncompatible', <Badge icon=\"fas fa-exclamation\"\n                   type=\"nextIncompatible\"\n                   label={app.translator.trans('bazaar.admin.page.extension.next_incompatible')} />)\n        }\n        if (!extension.flarumCompatibilityLatest()) {\n            items.add('latestIncompatible', <Badge icon=\"fas fa-exclamation-circle\"\n                 type=\"latestIncompatible\"\n                 label={app.translator.trans('bazaar.admin.page.extension.latest_incompatible')} />)\n        }\n        if (!extension.flarumCompatibilityCurrent()) {\n            items.add('incompatible', <Badge icon=\"fas fa-exclamation-triangle\"\n                 type=\"incompatible\"\n                 label={app.translator.trans('bazaar.admin.page.extension.incompatible')} />)\n        }\n        if (extension.subscribed()) {\n            items.add('subscribed', <Badge icon=\"fas fa-shopping-cart\"\n                type=\"subscribed\"\n                label={app.translator.trans('bazaar.admin.page.extension.subscribed')} />);\n        } else if (extension.premium()) {\n            items.add('premium', <Badge icon=\"fas fa-certificate\"\n                type=\"premium\"\n                label={app.translator.trans('bazaar.admin.page.extension.premium')} />);\n        }\n        if (extension.pending()) {\n            items.add('pending', <Badge icon=\"fas fa-circle-notch fa-spin\"\n                type=\"pending\"\n                label={app.translator.trans('bazaar.admin.page.extension.pending')} />);\n        }\n        if (extension.installed() && extension.outdated()) {\n            items.add('outdated', <Badge icon=\"fas fa-sort-numeric-down\"\n                type=\"outdated\"\n                label={app.translator.trans('bazaar.admin.page.extension.outdated', {new: extension.highest_version() })} />)\n        }\n        if (extension.favorited()) {\n            items.add('favorited', <Badge icon=\"fas fa-heart\"\n                type=\"favorited\"\n                label={app.translator.trans('bazaar.admin.page.extension.favorited')} />)\n        }\n        if (extension.installed() && !extension.enabled()) {\n            items.add('installed', <Badge icon=\"fas fa-plus-square\"\n                type=\"installed\"\n                label={app.translator.trans('bazaar.admin.page.extension.installed')} />)\n        }\n        if (extension.enabled()) {\n            items.add('enabled', <Badge icon=\"fas fa-check-square\"\n                type=\"enabled\"\n                label={app.translator.trans('bazaar.admin.page.extension.enabled')} />)\n        }\n\n        return items;\n    }\n}\n","import Component from 'flarum/Component';\nimport icon from \"flarum/helpers/icon\";\nimport Button from 'flarum/components/Button';\nimport LinkButton from 'flarum/components/LinkButton';\n\nexport default class BazaarLoader extends Component {\n\n    view() {\n        const error = this.props.loading() === 'error';\n\n        return m('div', {\n            className: 'Bazaar--Loader ' + (error ? 'Error' : null),\n            hidden: this.props.loading() === false\n        }, [\n            m('.Loader-modal', [\n                m('.Loader-icon', icon(error ? 'fas fa-exclamation-triangle' : 'fas fa-shopping-bag')),\n                m('div', [\n                    m('p', app.translator.trans(error ? 'bazaar.admin.loader.error' : 'bazaar.admin.loader.is_loading')),\n                    error ? [\n                        Button.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-sync',\n                            onclick: () => location.reload(),\n                            children: app.translator.trans('bazaar.admin.loader.refresh')\n                        }),\n                        Button.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-times',\n                            onclick: () => this.props.loading(false),\n                            children: app.translator.trans('bazaar.admin.loader.close')\n                        }),\n                        LinkButton.component({\n                            className: 'Button Button--block',\n                            icon: 'fas fa-bug',\n                            href: 'https://github.com/flagrow/bazaar/issues',\n                            target: '_blank',\n                            config: {}, // Disable internal Mithril routing\n                            children: app.translator.trans('bazaar.admin.loader.report_issue')\n                        }),\n                    ] : null\n                ])\n            ])\n        ])\n    }\n}\n","import Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\nimport ExtensionListItem from './ExtensionListItem';\nimport BazaarLoader from \"./BazaarLoader\";\nimport Placeholder from 'flarum/components/Placeholder';\n\nexport default class ExtensionList extends Component {\n    init() {\n        /**\n         * Whether or not discussion results are loading.\n         *\n         * @type {Boolean}\n         */\n        this.loading = this.props.loading;\n\n        /**\n         * Whether or not there are more results that can be loaded.\n         *\n         * @type {Boolean}\n         */\n        this.moreResults = false;\n        this.resultMeta = {};\n\n        // this.repository = new ExtensionRepository(this.loading);\n\n        /**\n         * The discussions in the discussion list.\n         *\n         * @type {Extension[]}\n         */\n        this.extensions = [];\n\n        this.refresh();\n    }\n\n\n\n    view() {\n        let loading;\n\n        if (this.loading()) {\n            loading = BazaarLoader.component({loading: this.loading});\n        } else if (this.moreResults) {\n            loading = [\n                Button.component({\n                    children: app.translator.trans('bazaar.admin.page.button.more', {current: this.resultMeta.pages_current + 1, total: this.resultMeta.pages_total}),\n                    className: 'Button Button--primary',\n                    onclick: this.loadMore.bind(this)\n                })\n            ];\n        }\n\n        if (this.extensions.length === 0 && !this.loading) {\n            let text = app.translator.trans('bazaar.admin.page.state.no_results_available');\n\n            if (! this.props.authorized) {\n                text = app.translator.trans('bazaar.admin.page.state.not_authorized');\n            }\n\n            return (\n                <div className=\"DiscussionList\">\n                    {Placeholder.component({text})}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"ExtensionList-wrapper\">\n                <div className=\"ExtensionList\">\n                    {this.extensions.map(extension => {\n                        return ExtensionListItem.component({\n                                extension: extension,\n                                repository: this.props.repository,\n                                connected: this.props.connected,\n                                key: extension.package(),\n                            });\n                    })}\n                </div>\n                <div className=\"ExtensionList-loadMore\">\n                    {loading}\n                </div>\n            </div>\n        );\n    }\n\n    update(params) {\n        this.props.params = params;\n\n        this.refresh();\n    }\n\n    /**\n     * Clear and reload the discussion list.\n     *\n     * @public\n     */\n    refresh(clear = true) {\n        if (clear) {\n            this.loading(true);\n            this.extensions = [];\n        }\n\n        return this.loadResults().then(\n            results => {\n                this.extensions = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading(false);\n                m.redraw();\n            }\n        );\n    }\n\n    /**\n     * Load a new page of discussion results.\n     *\n     * @param {Integer} offset The index to start the page at.\n     * @return {Promise}\n     */\n    loadResults(offset) {\n        const params = this.requestParams();\n        params.page = {offset};\n        params.include = params.include.join(',');\n\n        return app.store.find('bazaar-extensions', params);\n    }\n\n    /**\n     * Parse results and append them to the discussion list.\n     *\n     * @param {Extension[]} results\n     * @return {Extension[]}\n     */\n    parseResults(results) {\n        [].push.apply(this.extensions, results);\n\n        this.loading(false);\n        this.moreResults = !!results.payload.links.next;\n        this.resultMeta = results.payload.meta || {};\n\n        m.lazyRedraw();\n\n        return results;\n    }\n\n    /**\n     * Load the next page of discussion results.\n     *\n     * @public\n     */\n    loadMore() {\n        this.loading(true);\n\n        this.loadResults(this.extensions.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Get the parameters that should be passed in the API request to get\n     * discussion results.\n     *\n     * @return {Object}\n     * @api\n     */\n    requestParams() {\n        const params = this.props.params;\n        const out = {include: [], filter: {}};\n\n        out.sort = this.sortMap()[params.sort];\n\n        if (params.q) {\n            out.filter.q = params.q;\n        }\n\n        if (params.filter) {\n            out.filter = window.$.param(params.filter);\n        }\n\n        return out;\n    }\n\n    /**\n     * Get a map of sort keys (which appear in the URL, and are used for\n     * translation) to the API sort value that they represent.\n     *\n     * @return {Object}\n     */\n    sortMap() {\n        const map = {};\n\n        if (this.props.params.q) {\n            map.relevance = '';\n        }\n\n        return map;\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Button from \"flarum/components/Button\";\nimport icon from 'flarum/helpers/icon';\nimport extract from 'flarum/utils/extract';\nimport extractText from 'flarum/utils/extractText';\n\nexport default class CustomCheckbox extends Button {\n    view() {\n        const attrs = Object.assign({}, this.props);\n\n        delete attrs.state;\n        delete attrs.children;\n\n        attrs.className = attrs.className || '';\n        attrs.type = attrs.type || 'button';\n\n        if (this.props.state) attrs.className += ' active';\n\n        // If nothing else is provided, we use the textual button content as tooltip\n        if (!attrs.title && this.props.children) {\n            attrs.title = extractText(this.props.children);\n        }\n\n        const iconName = extract(attrs, 'icon');\n        if (iconName) attrs.className += ' hasIcon';\n\n        const loading = extract(attrs, 'loading');\n        if (attrs.disabled || loading) {\n            attrs.className += ' disabled' + (loading ? ' loading' : '');\n            delete attrs.onclick;\n        }\n\n        return (\n            <button {...attrs}\n                onclick={this.onchange.bind(this)}\n                >\n                {this.getButtonContent()}\n            </button>\n        );\n    }\n\n    /**\n     * Run a callback when the state of the checkbox is changed.\n     *\n     * @param {Boolean} checked\n     * @protected\n     */\n    onchange() {\n        if (this.props.onchange) this.props.onchange(! this.props.state, this);\n    }\n}\n","import Component from \"flarum/Component\";\nimport CustomCheckbox from \"./CustomCheckbox\";\nimport debounce from \"../utils/debounce\";\n\nexport default class ExtensionSearch extends Component {\n    init() {\n        this.updateDebounce = debounce(() => {\n            if (this.props.onsubmit) this.props.onsubmit(this.props.params);\n        }, 500);\n    }\n\n    view() {\n        return m('div', [\n            m('fieldset', {className: 'ExtensionSearch'},\n                m('input[type=text].FormControl', {\n                    value: this.props.params.q || '',\n                    oninput: m.withAttr('value', term => this.search(term)),\n                    placeholder: app.translator.trans('bazaar.admin.search.placeholder'),\n                })\n            ),\n            m('div', {className: 'ExtensionFilters ButtonGroup'}, [\n                CustomCheckbox.component({\n                    icon: 'fas fa-level-up',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('update'),\n                    onchange: (checked) => this.toggleFilter('update', checked),\n                    children: app.translator.trans('bazaar.admin.search.filter_update')\n                }),\n                CustomCheckbox.component({\n                    icon: 'fas fa-circle-notch',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('pending'),\n                    onchange: (checked) => this.toggleFilter('pending', checked),\n                    children: app.translator.trans('bazaar.admin.search.filter_pending')\n                }),\n                CustomCheckbox.component({\n                    icon: 'fas fa-plus-square',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('installed'),\n                    onchange: (checked) => this.toggleFilter('installed', checked),\n                    children: app.translator.trans('bazaar.admin.search.filter_installed')\n                }),\n                this.connected ? [\n                    CustomCheckbox.component({\n                        icon: 'fas fa-heart',\n                        className: 'Button hasIcon',\n                        state: this.isToggled('favorited'),\n                        onchange: (checked) => this.toggleFilter('favorited', checked),\n                        children: app.translator.trans('bazaar.admin.search.filter_favorited')\n                    }),\n                    CustomCheckbox.component({\n                        icon: 'fas fa-shopping-cart',\n                        className: 'Button hasIcon',\n                        state: this.isToggled('subscribed'),\n                        onchange: (checked) => this.toggleFilter('subscribed', checked),\n                        children: app.translator.trans('bazaar.admin.search.filter_subscribed')\n                    }),\n                ] : '',\n                CustomCheckbox.component({\n                    icon: 'fas fa-certificate',\n                    className: 'Button hasIcon',\n                    state: this.isToggled('premium'),\n                    onchange: (checked) => this.toggleFilter('premium', checked),\n                    children: app.translator.trans('bazaar.admin.search.filter_premium')\n                }),\n            ])\n        ])\n    }\n\n    isToggled(name) {\n        const filter = this.props.params.filter || {};\n        const is = filter.is || [];\n\n        return is.indexOf(name) >= 0;\n    }\n\n    toggleFilter(name, checked) {\n        let filter = this.props.params.filter || {};\n        let is = filter.is || [];\n\n        const i = is.indexOf(name);\n\n        if (checked && i === -1) {\n            is.push(name);\n        } else if (!checked && i >= 0) {\n            is.splice(i, 1);\n        }\n\n        filter.is = is;\n\n        this.props.params.filter = filter;\n\n        this.updateDebounce();\n    }\n\n    search(term) {\n        this.props.params.q = term;\n\n        this.updateDebounce();\n    }\n}\n","/**\n * Based on _.debounce from underscore.js\n * Copyright (c) 2009-2017 Jeremy Ashkenas, DocumentCloud and Investigative\n * @see https://davidwalsh.name/javascript-debounce-function\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n */\nexport default function (func, wait, immediate) {\n    let timeout;\n    return function () {\n        let context = this, args = arguments;\n        let later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n","import Modal from \"flarum/components/Modal\";\n\nexport default class FilePermissionsModal extends Modal {\n    className() {\n        return 'FilePermissionsModal';\n    }\n\n    title() {\n        return app.translator.trans('bazaar.admin.modal.requirements.file-permissions.title');\n    }\n\n    content() {\n        var permissions = this.props.file_permissions;\n        var paths = [];\n\n        permissions.forEach(path => {\n            paths.push(m('li', m('span', {className: 'code'}, path)))\n        })\n\n        return m('div', {className: 'Modal-body'}, [\n                m('p', app.translator.trans(\n                    'bazaar.admin.modal.requirements.file-permissions.description',\n                    {a: <a href=\"https://github.com/flagrow/bazaar/wiki/File-permissions\" target=\"_blank\"/>}\n                )),\n                m('ul', paths)\n            ]\n        );\n    }\n}\n","import Modal from \"flarum/components/Modal\";\n\nexport default class MemoryLimitModal extends Modal {\n    className() {\n        return 'MemoryLimitModal';\n    }\n\n    title() {\n        return app.translator.trans('bazaar.admin.modal.requirements.php-memory_limit.title');\n    }\n\n    content() {\n        let memory_requested = this.props.memory_requested;\n        let memory_limit = this.props.memory_limit;\n\n        return m(\n            'div',\n            {className: 'Modal-body'},\n            app.translator.trans(\n                'bazaar.admin.modal.requirements.php-memory_limit.description',\n                {\n                    required: memory_requested,\n                    limit: memory_limit,\n                    a: <a href=\"https://github.com/flagrow/bazaar/wiki/PHP-memory-limit\" target=\"_blank\"/>\n                }\n            )\n        );\n    }\n}\n","import Modal from \"flarum/components/Modal\";\nimport Button from \"flarum/components/Button\";\n\nexport default class BazaarConnectModal extends Modal {\n    className() {\n        return 'FilePermissionsModal';\n    }\n\n    title() {\n        return app.translator.trans('bazaar.admin.modal.connect-bazaar.title');\n    }\n\n    content() {\n        let flagrowHost = this.props.flagrowHost;\n\n        return m('div', {className: 'Modal-body'}, [\n                m('p', app.translator.trans('bazaar.admin.modal.connect-bazaar.description', {host: flagrowHost})),\n                m('div', {className: \"App-primaryControl\"}, [\n                    Button.component({\n                        type: 'submit',\n                        className: 'Button Button--primary Button--block',\n                        disabled: false,\n                        icon: 'check',\n                        children: app.translator.trans('bazaar.admin.page.button.connect')\n                    })\n                ])\n            ]\n        );\n    }\n\n    connect() {\n        var popup = window.open();\n\n        app.request({\n            method: 'GET',\n            url: app.forum.attribute('apiUrl') + '/bazaar/connect'\n        }).then(response => {\n            if (response && response.redirect) {\n                popup.location = response.redirect;\n            } else {\n                popup.close()\n            }\n        });\n    }\n\n    /**\n     * Handle the modal form's submit event.\n     *\n     * @param {Event} e\n     */\n    onsubmit() {\n        this.connect();\n    }\n}\n","import app from 'flarum/app';\nimport SettingsModal from 'flarum/components/SettingsModal';\nimport Switch from 'flarum/components/Switch';\n\nexport default class BazaarSettingsModal extends SettingsModal {\n\n  title() {\n    return app.translator.trans('bazaar.admin.modal.settings.title');\n  }\n\n  form() {\n    return [\n      m('div', { className: 'Form-group' }, [\n        m('label', { for: 'use-cron' }, app.translator.trans('bazaar.admin.modal.settings.field.use_cron_for_tasks.label')),\n        Switch.component({\n          state: this.setting('flagrow.bazaar.use_cron_for_tasks')(),\n          onchange: this.setting('flagrow.bazaar.use_cron_for_tasks'),\n          children: app.translator.trans('bazaar.admin.modal.settings.field.use_cron_for_tasks.toggle')\n        }),\n        m('span', app.translator.trans('bazaar.admin.modal.settings.field.use_cron_for_tasks.description', {\n          a: <a href=\"https://github.com/flagrow/bazaar/wiki/Cron-task-processing\" target=\"_blank\"/>\n        }))\n      ]),\n      m('div', { className: 'Form-group' }, [\n        m('label', { for: 'bazaar-api-token' }, app.translator.trans('bazaar.admin.modal.settings.field.token.label')),\n        m('input', {\n          id: 'bazaar-api-token',\n          className: 'FormControl',\n          bidi: this.setting('flagrow.bazaar.api_token')\n        }),\n        m('span', app.translator.trans('bazaar.admin.modal.settings.field.token.description'))\n      ])\n    ];\n  }\n}\n","import Switch from 'flarum/components/Switch';\nimport SettingsModal from 'flarum/components/SettingsModal';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Button from 'flarum/components/Button';\n\nexport default class DashboardModal extends SettingsModal {\n  title() {\n    return app.translator.trans('bazaar.admin.modal.dashboard.title');\n  }\n\n  form() {\n    const flagrowHost = this.props.flagrowHost;\n    const syncing = this.setting('flagrow.bazaar.sync', false);\n\n    return m('div', { className: 'Modal-body' }, [\n        m('p', app.translator.trans('bazaar.admin.modal.dashboard.sync.description', { host: flagrowHost })),\n        Switch.component({\n          state: (syncing() === true || syncing() == 1),\n          onchange: this.updateSetting.bind(this, syncing, 'flagrow.bazaar.sync'),\n          children: app.translator.trans('bazaar.admin.modal.dashboard.sync.switch', { host: flagrowHost })\n        }),\n      ]\n    );\n  }\n\n  submitButton() {\n    const flagrowHost = this.props.flagrowHost;\n    return m('div', {className: 'ButtonGroup'}, [\n      Button.component({\n        className: 'Button Connected',\n        icon: 'dashboard',\n        children: app.translator.trans('bazaar.admin.modal.dashboard.visit-remote-dashboard'),\n        onclick: () => window.open(flagrowHost + '/home')\n      })\n    ]);\n  }\n\n  /**\n   * Updates setting in database.\n   * @param prop\n   * @param setting\n   * @param value\n   */\n  updateSetting(prop, setting, value) {\n    saveSettings({\n      [setting]: value\n    });\n\n    prop(value);\n  }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport LinkButton from 'flarum/components/LinkButton';\nimport Button from 'flarum/components/Button';\nimport FilePermissionsModal from '../modals/FilePermissionsModal';\nimport MemoryLimitModal from '../modals/MemoryLimitModal';\nimport BazaarConnectModal from '../modals/BazaarConnectModal';\nimport BazaarSettingsModal from '../modals/BazaarSettingsModal';\nimport DashboardModal from '../modals/DashboardModal';\n\nexport default class BazaarPageHeader extends Component {\n    view() {\n        return (\n            <div className=\"ExtensionsPage-header\">\n                <div className=\"container\">\n                    {this.header()}\n                </div>\n            </div>\n        );\n    }\n\n    header() {\n        let buttons = [].concat(\n          this.pagesButtons(),\n          this.settingsButton(),\n          this.requirementsButtons(),\n          this.connectedButtons(),\n        );\n\n        return m('div', {className: 'ButtonGroup'}, buttons);\n    }\n\n    settingsButton() {\n      return [\n        Button.component({\n          className: 'Button Button--icon',\n          icon: 'fas fa-cog',\n          onclick: () => app.modal.show(new BazaarSettingsModal)\n        })\n      ];\n    }\n    /**\n     * Loads a list of buttons that give insight in the state of this installation.\n     * @returns {Array}\n     */\n    requirementsButtons() {\n        let memory_limit_met = app.data.settings['flagrow.bazaar.php.memory_limit-met'] || false;\n        let memory_limit = app.data.settings['flagrow.bazaar.php.memory_limit'];\n        let memory_requested = app.data.settings['flagrow.bazaar.php.memory_requested'];\n        let file_permissions = app.data.settings['flagrow.bazaar.file-permissions'] || [];\n\n        let components = [];\n\n        if (!memory_limit_met) {\n            components.push(\n                Button.component({\n                    className: 'Button Button--icon Requirement-MemoryLimit',\n                    icon: 'fas fa-signal',\n                    onclick: () => app.modal.show(new MemoryLimitModal({memory_requested, memory_limit}))\n                })\n            );\n        }\n\n        if (file_permissions.length > 0) {\n            components.push(Button.component({\n                className: 'Button Button--icon Requirement-FilePermissions',\n                icon: 'fas fa-hdd',\n                onclick: () => app.modal.show(new FilePermissionsModal({file_permissions}))\n            }));\n        }\n\n        return components;\n    }\n\n    connectedButtons() {\n        let connected = this.props.connected;\n        let flagrowHost = app.data.settings['flagrow.bazaar.flagrow-host'] || 'https://flagrow.io';\n\n        if (connected) {\n            return [\n                Button.component({\n                    className: 'Button Button--icon Connected',\n                    icon: 'fas fa-plug',\n                    onclick: () => app.modal.show(new DashboardModal({\n                        flagrowHost\n                    }))\n                }),\n            ]\n        }\n\n        return [\n            Button.component({\n                className: 'Button Button--icon Connect',\n                icon: 'fas fa-plug',\n                onclick: () => app.modal.show(new BazaarConnectModal({flagrowHost}))\n            }),\n        ]\n    }\n\n    pagesButtons() {\n        // Sometimes no route has been set as the current one\n        if (typeof app.current === 'undefined') {\n            return null;\n        }\n\n        const routeName = app.current.props.routeName;\n        let links = [];\n\n        links.push(LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-shopping-bag',\n            href: app.route('flagrow-bazaar'),\n            title: app.translator.trans('bazaar.admin.header.extensions'),\n            active: routeName === 'flagrow-bazaar'\n        }));\n\n        links.push(LinkButton.component({\n            className: 'Button Button--icon',\n            icon: 'fas fa-history',\n            href: app.route('flagrow-bazaar-tasks'),\n            title: app.translator.trans('bazaar.admin.header.tasks'),\n            active: routeName === 'flagrow-bazaar-tasks'\n        }));\n\n        return links;\n    }\n}\n","import Component from \"flarum/Component\";\nimport ExtensionRepository from \"../utils/ExtensionRepository\";\nimport ExtensionList from \"./ExtensionList\";\nimport ExtensionSearch from \"./ExtensionSearch\";\nimport BazaarPageHeader from './BazaarPageHeader';\n\nexport default class BazaarPage extends Component {\n    init() {\n        app.current = this;\n\n        this.authorized = (app.data.settings['flagrow.bazaar.api_token'] || '').length > 0;\n        this.connected = app.data.settings['flagrow.bazaar.connected'] && app.data.settings['flagrow.bazaar.connected'] !== '0';\n        this.loading = m.prop(true);\n\n        this.params = this.params();\n\n        this.repository = new ExtensionRepository(this.loading);\n\n        this.extensionList = new ExtensionList({\n            params: this.params,\n            loading: this.loading,\n            repository: this.repository,\n            connected: this.connected,\n            authorized: this.authorized\n        });\n\n        this.search = ExtensionSearch.component({params: this.params, onsubmit: this.updateResults.bind(this)});\n    }\n\n    updateResults(params) {\n        this.params = params;\n\n        this.extensionList.update(params);\n    }\n\n    view() {\n        return m('div', {className: 'Bazaar Extensions'}, [\n            BazaarPageHeader.component({\n                connected: this.connected\n            }),\n            m('div', {className: 'ExtensionsPage-list'}, [\n                m('div', {className: 'container'}, [\n                    this.search,\n                    this.extensionList.render()\n                ])\n            ]),\n        ]);\n    }\n\n    /**\n     * Get URL parameters that stick between filter changes.\n     *\n     * @return {Object}\n     */\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q')\n        };\n    }\n\n\n    /**\n     * Get parameters to pass to the DiscussionList component.\n     *\n     * @return {Object}\n     */\n    params() {\n        const params = this.stickyParams();\n\n        params.filter = m.route.param('filter');\n\n        return params;\n    }\n}\n","import app from 'flarum/app';\n\nexport default class ExtensionRepository {\n    constructor(loading) {\n        this.tasks = m.prop([]);\n        this.nextPageUrl = null;\n        this.loading = loading;\n        this.resetNavigation();\n    }\n\n    loadNextPage() {\n        if (this.loading() || !this.nextPageUrl) {\n            return;\n        }\n\n        this.loading(true);\n\n        app.request({\n            method: 'GET',\n            url: this.nextPageUrl\n        }).then(result => {\n            const newTasks = result.data.map(data => app.store.createRecord('bazaar-tasks', data));\n            this.tasks(newTasks);\n            this.nextPageUrl = null;\n            this.loading(false);\n\n            m.redraw();\n        });\n    }\n\n    resetNavigation() {\n        this.loading(false);\n        this.nextPageUrl = app.forum.attribute('apiUrl') + '/bazaar/tasks';\n        this.tasks([]);\n    }\n\n}\n","import app from 'flarum/app';\nimport Component from \"flarum/Component\";\nimport icon from \"flarum/helpers/icon\";\nimport Button from \"flarum/components/Button\";\nimport humanTime from 'flarum/helpers/humanTime';\nimport fullTime from 'flarum/helpers/fullTime';\n\nexport default class TaskListItem extends Component {\n    init() {\n        this.extended = m.prop(false);\n    }\n\n    view() {\n        const task = this.props.task;\n        const iconName = (function() {\n            switch (task.status()) {\n                case 'success':\n                    return 'fas fa-check';\n                case 'exception':\n                    return 'fas fa-exclamation';\n                case 'working':\n                    return 'fas fa-spinner';\n            }\n            return 'fas fa-clock';\n        })();\n\n        // We need to wrap items in a tbody because Mithril 0.2 and therefore flarum/Component does not allow a list of vnodes to be returned from a view\n        // And we can't wrap <tr> in anything else without breaking the table\n        // Having multiple <tbody> does not seem to be too much an issue https://stackoverflow.com/a/3076790/3133038\n        return (\n            <tbody className={ 'TaskListItem status-' + task.status() }>\n                <tr>\n                    <td className=\"time-column\">{ humanTime(task.created_at()) }</td>\n                    <td className=\"status-column\" title={ app.translator.trans('bazaar.admin.page.task.status.' + (task.status() !== null ? task.status() : 'unknown')) }><div className=\"status\">{ icon(iconName) }</div></td>\n                    <td className=\"command-column\">\n                        { app.translator.trans('bazaar.admin.page.task.command.' + task.command(), {extension: (<strong>{ task.package() }</strong>)}) }\n                    </td>\n                    <td className=\"details-column\">\n                        { Button.component({\n                            icon: 'fas fa-plus',\n                            className: 'Button',\n                            onclick: () => { this.extended(!this.extended()); }\n                        }) }\n                    </td>\n                </tr>\n                { this.extended() ? (\n                    <tr>\n                        <td className=\"output-column\" colspan=\"4\">\n                            <dl>\n                                <dt>{ app.translator.trans('bazaar.admin.page.task.attribute.created_at') }</dt>\n                                <dd>{ fullTime(task.created_at()) }</dd>\n                            </dl>\n                            <dl>\n                                <dt>{ app.translator.trans('bazaar.admin.page.task.attribute.started_at') }</dt>\n                                <dd>{ fullTime(task.started_at()) }</dd>\n                            </dl>\n                            <dl>\n                                <dt>{ app.translator.trans('bazaar.admin.page.task.attribute.finished_at') }</dt>\n                                <dd>{ fullTime(task.finished_at()) }</dd>\n                            </dl>\n                            <p>{ app.translator.trans('bazaar.admin.page.task.header.output') }</p>\n                            <pre className=\"output\">{ task.output() }</pre>\n                        </td>\n                    </tr>\n                ) : null}\n            </tbody>\n        );\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport TaskRepository from './../utils/TaskRepository';\nimport BazaarPageHeader from './BazaarPageHeader';\nimport TaskListItem from './TaskListItem';\nimport BazaarLoader from './BazaarLoader';\n\nexport default class TasksPage extends Component {\n    init() {\n        // Used in the header\n        app.current = this;\n\n        this.loading = m.prop(false);\n        this.repository = new TaskRepository(this.loading);\n        this.repository.loadNextPage();\n        this.loader = BazaarLoader.component({loading: this.loading});\n        this.connected = app.data.settings['flagrow.bazaar.connected'] && app.data.settings['flagrow.bazaar.connected'] !== '0';\n    }\n\n    view() {\n        return (\n            <div className=\"ExtensionsPage Bazaar TaskPage\">\n                {BazaarPageHeader.component({connected: this.connected})}\n\n                <div className=\"ExtensionsPage-list\">\n                    <div className=\"container\">\n                        { this.taskGroups().map(\n                            group => group.tasks.length ? (\n                                <div>\n                                    <h2>{ group.title }</h2>\n                                    <table className=\"TaskPage-table\">\n                                        <thead>\n                                        <tr>\n                                            <th className=\"time-column\">{ app.translator.trans('bazaar.admin.page.task.header.time') }</th>\n                                            <th className=\"status-column\">{ app.translator.trans('bazaar.admin.page.task.header.status') }</th>\n                                            <th>{ app.translator.trans('bazaar.admin.page.task.header.command') }</th>\n                                            <th className=\"details-column\">{ app.translator.trans('bazaar.admin.page.task.header.details') }</th>\n                                        </tr>\n                                        </thead>\n                                        { group.tasks.map(\n                                            task => m(TaskListItem, {task: task})\n                                        ) }\n                                    </table>\n                                </div>\n                            ) : null\n                        ) }\n                    </div>\n                </div>\n                { this.loader }\n            </div>\n        );\n    }\n\n    /**\n     * Split tasks into three groups: today, this month and older\n     */\n    taskGroups() {\n        let taskGroups = [\n            {\n                title: app.translator.trans('bazaar.admin.page.task.group.today'),\n                tasks: []\n            },\n            {\n                title: app.translator.trans('bazaar.admin.page.task.group.lastmonth'),\n                tasks: []\n            },\n            {\n                title: app.translator.trans('bazaar.admin.page.task.group.older'),\n                tasks: []\n            }\n        ];\n        let currentGroup = 0;\n\n        // Milliseconds from 1 January 1970 00:00:00 UTC\n        const today = (new Date()).setHours(0,0,0,0);\n\n        this.repository.tasks().forEach(task => {\n            // Milliseconds from 1 January 1970 00:00:00 UTC\n            const taskDate = new Date(task.created_at()).setHours(0,0,0,0);\n\n            switch (currentGroup) {\n                case 0:\n                    if (taskDate === today) {\n                        taskGroups[currentGroup].tasks.push(task);\n                    } else {\n                        currentGroup++;\n                    }\n                    break;\n                case 1:\n                    // Check if the date is within the last 30 days\n                    if ((today - taskDate) / (1000 * 3600 * 24) <= 30) {\n                        taskGroups[currentGroup].tasks.push(task);\n                    } else {\n                        currentGroup++;\n                    }\n                    break;\n                default:\n                    taskGroups[currentGroup].tasks.push(task);\n            }\n        });\n\n        return taskGroups;\n    }\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport Extension from './models/Extension';\nimport Task from './models/Task';\nimport addBazaarPage from './addBazaarPage';\nimport addTasksPage from './addTasksPage';\n\napp.initializers.add('extiverse-bazaar', app => {\n    app.store.models['bazaar-extensions'] = Extension;\n    app.store.models['bazaar-tasks'] = Task;\n\n    addBazaarPage();\n    addTasksPage();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\nimport BazaarPage from './components/BazaarPage';\n\nexport default function () {\n    // create the route\n    app.routes['flagrow-bazaar'] = {path: '/flagrow/bazaar', component: BazaarPage.component()};\n    // settings toggle on native extensions page\n    app.extensionSettings['flagrow-bazaar'] = () => m.route(app.route('flagrow-bazaar'));\n    // Add tab to admin menu\n    extend(AdminNav.prototype, 'items', items => {\n        items.add('flagrow-bazaar', AdminLinkButton.component({\n            href: app.route('flagrow-bazaar'),\n            icon: 'fas fa-shopping-bag',\n            children: app.translator.trans('bazaar.admin.nav.title'),\n            description: app.translator.trans('bazaar.admin.nav.description')\n        }));\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport TasksPage from './components/TasksPage';\n\nexport default function () {\n    app.routes['flagrow-bazaar-tasks'] = {path: '/flagrow/bazaar/tasks', component: TasksPage.component()};\n}\n"],"sourceRoot":""}